restart
with(Domains):

Euclides := proc(K, a, b)
local(r, i)
r[0] := a
r[1] := b
i := 1
while (r[i]<> K[Input](0)) do
    r[i + 1] := K[Rem](r[i - 1], r[i])
    i := i + 1
od:
return r[i - 1]
end:

#EJEMPLOS:

#EN ℤ:

Euclides(Z, 150, 39)  #Resultado 3

#EN ℤp[x]:

p := 13
Zp := Zmod(p):
Zpx := DUP(Zp, x):
f := Zpx[Input](15*x^5 + 2*x^3 + x):
g := Zpx[Input](3*x^4 - 1):
Euclides(Zpx, f, g); #Resultado 4*x^2 + 12

#EN ℚ[x]

Qx := DUP(Q, x):
f := Qx[Input](x^2 + 2*x + 1):
g := Qx[Input](x + 1):
Euclides(Qx, f, g); #Resultado x + 1
